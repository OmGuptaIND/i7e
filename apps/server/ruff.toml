# Core settings
line-length = 88
target-version = "py39"
extend-exclude = [
    ".git",
    ".venv",
    "venv",
    "env",
    "__pycache__",
    "build",
    "dist",
    "migrations",
]

# Rule selection
extend-select = [
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "I",    # isort
    "N",    # pep8-naming
    "RUF",  # Ruff-specific rules
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
    "Q",    # flake8-quotes
]

ignore = [
    # Docstring issues
    "D107",  # Missing docstring in __init__
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D417",  # Missing argument description in docstring
    
    # Type annotation issues
    "ANN101",  # Missing type annotation for self
    "ANN102",  # Missing type annotation for cls
    
    # Other
    "RUF100",  # Unused noqa directive
]

# Per-file-ignores
[per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports
"test_*.py" = [
    "S101",    # Use of assert
    "PLR2004", # Magic numbers
]
"tests/**" = [
    "S101",    # Use of assert
    "PLR2004", # Magic numbers
]
"conftest.py" = ["ARG001"]

# Isort configuration
[isort]
known-first-party = ["your_project_name"]  # Update this
known-third-party = ["pytest", "requests"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder"
]

# PyDocStyle configuration
[pydocstyle]
convention = "numpy"

# Lint configuration
[lint]
# Maximum cyclomatic complexity allowed
mccabe = { max-complexity = 10 }

# Format configuration
[format]
quote-style = "double"  # Consistent with Black
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = true